{"version":3,"sources":["actions/medicineActions.js","actions/types.js","components/Medicine/MedicineItem.js","components/Medicine/CreateMedicineButton.js","components/Pharmacy.js","securityUtils/setJWTToken.js","actions/securityActions.js","components/Layout/Header.js","reducers/errorReducer.js","reducers/medicineReducer.js","reducers/securityReducer.js","reducers/index.js","store.js","components/Medicine/AddMedicine.js","components/Medicine/UpdateMedicine.js","components/Layout/Landing.js","components/UserManagement/Register.js","components/UserManagement/Login.js","securityUtils/SecureRoute.js","App.js","serviceWorker.js","index.js"],"names":["createMedicine","medicine","history","_ref","Object","asyncToGenerator","regenerator_default","a","mark","_callee","dispatch","wrap","_context","prev","next","axios","post","sent","push","type","payload","t0","response","data","stop","_x","apply","this","arguments","MedicineItem","onDeleteClick","id","_this","props","deleteMedicine","react_default","createElement","className","name","place","expirationDate","react_router_dom","to","concat","onClick","bind","Component","connect","_ref4","_callee4","_context4","window","confirm","delete","_x4","CreateMedicineButton","Fragment","Pharmacy","getMedicines","medicines","Medicine_CreateMedicineButton","map","Medicine_MedicineItem","key","state","_ref2","_callee2","res","_context2","get","_x2","setJWTToken","token","defaults","headers","common","logout","localStorage","removeItem","Header","location","href","headerLinks","_this$props$security","security","validToken","user","userIsAuthenticated","username","userIsNotAuthenticated","data-toggle","data-target","initialState","combineReducers","errors","length","undefined","action","objectSpread","filter","middleware","thunk","ReactReduxDevTools","__REDUX_DEVTOOLS_EXTENSION__","store","navigator","userAgent","includes","createStore","rootReducer","compose","applyMiddleware","AddMedicine","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","onChange","assertThisInitialized","onSubmit","nextProps","setState","e","defineProperty","target","value","preventDefault","newMedicine","classnames","is-invalid","placeholder","UpdateMedicine","_nextProps$medicine","match","params","getMedicine","updateMedicine","description","_ref3","_callee3","_context3","_x3","Landing","Register","password","confirmPassword","newUser","createNewUser","Login","LoginRequest","login","decoded","setItem","jwt_decode","component","otherProps","objectWithoutProperties","react_router","assign","render","jwtToken","decoded_jwtToken","currentTime","Date","now","exp","App","es","Layout_Header","exact","path","SecureRoute","Boolean","hostname","ReactDOM","src_App_0","document","getElementById","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.408637cf.chunk.js","sourcesContent":["import axios from \"axios\";\r\nimport {\r\n  GET_ERRORS,\r\n  GET_MEDICINES,\r\n  GET_MEDICINE,\r\n  DELETE_MEDICINE\r\n} from \"../actions/types\";\r\n\r\nexport const createMedicine = (medicine, history) => async dispatch => {\r\n  try {\r\n    const res = await axios.post(\"/api/medicines\", medicine);\r\n    history.push(\"/pharmacy\");\r\n    dispatch({\r\n      type: GET_ERRORS,\r\n      payload: {}\r\n    });\r\n  } catch (err) {\r\n    dispatch({\r\n      type: GET_ERRORS,\r\n      payload: err.response.data\r\n    });\r\n  }\r\n};\r\n\r\nexport const getMedicines = () => async dispatch => {\r\n  const res = await axios.get(\"/api/medicines/all\");\r\n  dispatch({\r\n    type: GET_MEDICINES,\r\n    payload: res.data\r\n  });\r\n};\r\n\r\nexport const getMedicine = (id, history) => async dispatch => {\r\n  try {\r\n    const res = await axios.get(`/api/medicines/${id}`);\r\n    dispatch({\r\n      type: GET_MEDICINE,\r\n      payload: res.data\r\n    });\r\n  } catch (error) {\r\n    history.push(\"/pharmacy\");\r\n  }\r\n};\r\n\r\nexport const deleteMedicine = id => async dispatch => {\r\n  if (window.confirm(\"Are you sure you want delete this?\")) {\r\n    await axios.delete(`/api/medicines/${id}`);\r\n    dispatch({\r\n      type: DELETE_MEDICINE,\r\n      payload: id\r\n    });\r\n  }\r\n};\r\n","export const GET_ERRORS = \"GET_ERRORS\";\r\nexport const GET_MEDICINES = \"GET_MEDICINES\";\r\nexport const GET_MEDICINE = \"GET_MEDICINE\";\r\nexport const DELETE_MEDICINE = \"DELETE_MEDICINE\";\r\n\r\nexport const SET_CURRENT_USER = \"SET_CURRENT_USER\";\r\n","import React, { Component } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport PropTypes from \"prop-types\";\r\nimport { connect } from \"react-redux\";\r\nimport { deleteMedicine } from \"../../actions/medicineActions\";\r\n\r\nclass MedicineItem extends Component {\r\n  onDeleteClick = id => {\r\n    this.props.deleteMedicine(id);\r\n  };\r\n  render() {\r\n    const { medicine } = this.props;\r\n    return (\r\n      <div className=\"container\">\r\n        <div className=\"card card-body bg-light mb-3\">\r\n          <div className=\"row\">\r\n            <div className=\"col-lg-6 col-md-4 col-8\">\r\n              <h3>{medicine.name}</h3>\r\n              <p>{medicine.place}</p>\r\n              <p>{medicine.expirationDate}</p>\r\n            </div>\r\n            <div className=\"col-md-4 d-none d-lg-block\">\r\n              <ul className=\"list-group\">\r\n                <Link to={`/updateMedicine/${medicine.id}`}>\r\n                  <li className=\"list-group-item update\">\r\n                    <i className=\"text-primary\"> Update</i>\r\n                  </li>\r\n                </Link>\r\n\r\n                <li\r\n                  className=\"list-group-item delete\"\r\n                  onClick={this.onDeleteClick.bind(this, medicine.id)}\r\n                >\r\n                  <i className=\"text-danger\"> Delete </i>\r\n                </li>\r\n              </ul>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nMedicineItem.propTypes = {\r\n  deleteMedicine: PropTypes.func.isRequired\r\n};\r\nexport default connect(\r\n  null,\r\n  { deleteMedicine }\r\n)(MedicineItem);\r\n","import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nconst CreateMedicineButton = () => {\r\n  return (\r\n    <React.Fragment>\r\n      <Link to=\"/addMedicine\" className=\"btn btn-lg btn-info\">\r\n        Create a Medicine\r\n      </Link>\r\n    </React.Fragment>\r\n  );\r\n};\r\nexport default CreateMedicineButton;\r\n","import React, { Component } from \"react\";\r\nimport MedicineItem from \"./Medicine/MedicineItem\";\r\nimport CreateMedicineButton from \"./Medicine/CreateMedicineButton\";\r\nimport { connect } from \"react-redux\";\r\nimport { getMedicines } from \"../actions/medicineActions\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nclass Pharmacy extends Component {\r\n  componentDidMount() {\r\n    this.props.getMedicines();\r\n  }\r\n\r\n  render() {\r\n    const medicines = this.props.medicine.medicines;\r\n    return (\r\n      <div className=\"projects\">\r\n        <div className=\"container\">\r\n          <div className=\"row\">\r\n            <div className=\"col-md-12\">\r\n              <h1 className=\"display-4 text-center\">Medicines</h1>\r\n              <br />\r\n              <CreateMedicineButton />\r\n              <br />\r\n              <hr />\r\n            </div>\r\n            {medicines.map(medicine => (\r\n              <MedicineItem key={medicine.id} medicine={medicine} />\r\n            ))}\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\nPharmacy.propTypes = {\r\n  medicine: PropTypes.object.isRequired,\r\n  getMedicines: PropTypes.func.isRequired\r\n};\r\n\r\nconst mapStateToProps = state => ({\r\n  medicine: state.medicine\r\n});\r\nexport default connect(\r\n  mapStateToProps,\r\n  { getMedicines }\r\n)(Pharmacy);\r\n","import axios from \"axios\";\r\n\r\nconst setJWTToken = token => {\r\n  if (token) {\r\n    axios.defaults.headers.common[\"Authorization\"] = token;\r\n  } else {\r\n    delete axios.defaults.headers.common[\"Authorization\"];\r\n  }\r\n};\r\n\r\nexport default setJWTToken;\r\n","import axios from \"axios\";\r\nimport { GET_ERRORS, SET_CURRENT_USER } from \"./types\";\r\nimport setJWTToken from \"../securityUtils/setJWTToken\";\r\nimport jwt_decode from \"jwt-decode\";\r\n\r\nexport const createNewUser = (newUser, history) => async dispatch => {\r\n  try {\r\n    await axios.post(\"/api/users/register\", newUser);\r\n    history.push(\"/login\");\r\n    dispatch({\r\n      type: GET_ERRORS,\r\n      payload: {}\r\n    });\r\n  } catch (error) {\r\n    dispatch({\r\n      type: GET_ERRORS,\r\n      payload: error.response.data\r\n    });\r\n  }\r\n};\r\n\r\nexport const login = LoginRequest => async dispatch => {\r\n  try {\r\n    const res = await axios.post(\"/api/users/login\", LoginRequest);\r\n\r\n    const { token } = res.data;\r\n\r\n    localStorage.setItem(\"jwtToken\", token);\r\n\r\n    setJWTToken(token);\r\n\r\n    const decoded = jwt_decode(token);\r\n\r\n    dispatch({\r\n      type: SET_CURRENT_USER,\r\n      payload: decoded\r\n    });\r\n  } catch (error) {\r\n    dispatch({\r\n      type: GET_ERRORS,\r\n      payload: error.response.data\r\n    });\r\n  }\r\n};\r\n\r\nexport const logout = () => dispatch => {\r\n  localStorage.removeItem(\"jwtToken\");\r\n  setJWTToken(false);\r\n  dispatch({\r\n    type: SET_CURRENT_USER,\r\n    payload: {}\r\n  });\r\n};\r\n","import React, { Component } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport PropTypes from \"prop-types\";\r\nimport { connect } from \"react-redux\";\r\nimport { logout } from \"../../actions/securityActions\";\r\n\r\nclass Header extends Component {\r\n  logout() {\r\n    this.props.logout();\r\n    window.location.href = \"/\";\r\n  }\r\n  render() {\r\n    const { validToken, user } = this.props.security;\r\n\r\n    const userIsAuthenticated = (\r\n      <div className=\"collapse navbar-collapse\" id=\"mobile-nav\">\r\n        <ul className=\"navbar-nav mr-auto\">\r\n          <li className=\"nav-item\">\r\n            <Link className=\"nav-link\" to=\"/pharmacy\">\r\n              Pharmacy\r\n            </Link>\r\n          </li>\r\n        </ul>\r\n\r\n        <ul className=\"navbar-nav ml-auto\">\r\n          <li className=\"nav-item\">\r\n            <Link className=\"nav-link\" to=\"/pharmacy\">\r\n              <i className=\"fas fa-user-circle mr-1\" />\r\n              {user.username}\r\n            </Link>\r\n          </li>\r\n          <li className=\"nav-item\">\r\n            <Link\r\n              className=\"nav-link\"\r\n              to=\"/logout\"\r\n              onClick={this.logout.bind(this)}\r\n            >\r\n              Logout\r\n            </Link>\r\n          </li>\r\n        </ul>\r\n      </div>\r\n    );\r\n\r\n    const userIsNotAuthenticated = (\r\n      <div className=\"collapse navbar-collapse\" id=\"mobile-nav\">\r\n        <ul className=\"navbar-nav ml-auto\">\r\n          <li className=\"nav-item\">\r\n            <Link className=\"nav-link\" to=\"/register\">\r\n              Sign Up\r\n            </Link>\r\n          </li>\r\n          <li className=\"nav-item\">\r\n            <Link className=\"nav-link\" to=\"/login\">\r\n              Login\r\n            </Link>\r\n          </li>\r\n        </ul>\r\n      </div>\r\n    );\r\n\r\n    let headerLinks;\r\n\r\n    if (validToken && user) {\r\n      headerLinks = userIsAuthenticated;\r\n    } else {\r\n      headerLinks = userIsNotAuthenticated;\r\n    }\r\n    return (\r\n      <nav className=\"navbar navbar-expand-sm navbar-dark bg-primary mb-4\">\r\n        <div className=\"container\">\r\n          <Link className=\"navbar-brand\" to=\"/\">\r\n            Home Pharmacy\r\n          </Link>\r\n          <button\r\n            className=\"navbar-toggler\"\r\n            type=\"button\"\r\n            data-toggle=\"collapse\"\r\n            data-target=\"#mobile-nav\"\r\n          >\r\n            <span className=\"navbar-toggler-icon\" />\r\n          </button>\r\n          {headerLinks}\r\n        </div>\r\n      </nav>\r\n    );\r\n  }\r\n}\r\nHeader.propTypes = {\r\n  logout: PropTypes.func.isRequired,\r\n  security: PropTypes.object.isRequired\r\n};\r\n\r\nconst mapStateToProps = state => ({\r\n  security: state.security\r\n});\r\nexport default connect(\r\n  mapStateToProps,\r\n  { logout }\r\n)(Header);\r\n","import { GET_ERRORS } from \"../actions/types\";\r\n\r\nconst initialState = {};\r\n\r\nexport default function(state = initialState, action) {\r\n  switch (action.type) {\r\n    case GET_ERRORS:\r\n      return action.payload;\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n","import { GET_MEDICINES, GET_MEDICINE, DELETE_MEDICINE } from \"../actions/types\";\r\n\r\nconst initialState = {\r\n  medicines: [],\r\n  medicine: {}\r\n};\r\n\r\nexport default function(state = initialState, action) {\r\n  switch (action.type) {\r\n    case GET_MEDICINES:\r\n      return {\r\n        ...state,\r\n        medicines: action.payload\r\n      };\r\n\r\n    case GET_MEDICINE:\r\n      return {\r\n        ...state,\r\n        medicine: action.payload\r\n      };\r\n    case DELETE_MEDICINE:\r\n      return {\r\n        ...state,\r\n        medicines: state.medicines.filter(\r\n          medicine => medicine.id !== action.payload\r\n        )\r\n      };\r\n\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n","import { SET_CURRENT_USER } from \"../actions/types\";\r\n\r\nconst initialState = {\r\n  user: {},\r\n  validToken: false\r\n};\r\n\r\nconst booleanActionPayload = payload => {\r\n  if (payload) {\r\n    return true;\r\n  } else {\r\n    return false;\r\n  }\r\n};\r\n\r\nexport default function(state = initialState, action) {\r\n  switch (action.type) {\r\n    case SET_CURRENT_USER:\r\n      return {\r\n        ...state,\r\n        validToken: booleanActionPayload(action.payload),\r\n        user: action.payload\r\n      };\r\n\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n","import { combineReducers } from \"redux\";\r\nimport errorReducer from \"./errorReducer\";\r\nimport medicineReducer from \"./medicineReducer\";\r\nimport securityReducer from \"./securityReducer\";\r\n\r\nexport default combineReducers({\r\n  errors: errorReducer,\r\n  medicine: medicineReducer,\r\n  security: securityReducer\r\n});\r\n","import { createStore, applyMiddleware, compose } from \"redux\";\r\nimport thunk from \"redux-thunk\";\r\nimport rootReducer from \"./reducers\";\r\n\r\nconst initialState = {};\r\nconst middleware = [thunk];\r\n\r\nlet store;\r\n\r\nconst ReactReduxDevTools =\r\n  window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__();\r\nif (window.navigator.userAgent.includes(\"Chrome\") && ReactReduxDevTools) {\r\n  store = createStore(\r\n    rootReducer,\r\n    initialState,\r\n    compose(\r\n      applyMiddleware(...middleware),\r\n      ReactReduxDevTools\r\n    )\r\n  );\r\n} else {\r\n  store = createStore(\r\n    rootReducer,\r\n    initialState,\r\n    compose(applyMiddleware(...middleware))\r\n  );\r\n}\r\n\r\nexport default store;\r\n","import React, { Component } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { connect } from \"react-redux\";\r\nimport { createMedicine } from \"../../actions/medicineActions\";\r\nimport classnames from \"classnames\";\r\nclass AddMedicine extends Component {\r\n  constructor() {\r\n    super();\r\n    this.state = {\r\n      name: \"\",\r\n      expirationDate: \"\",\r\n      place: \"\",\r\n      errors: {}\r\n    };\r\n    this.onChange = this.onChange.bind(this);\r\n    this.onSubmit = this.onSubmit.bind(this);\r\n  }\r\n  //life cycle hooks\r\n  componentWillReceiveProps(nextProps) {\r\n    if (nextProps.errors) {\r\n      this.setState({ errors: nextProps.errors });\r\n    }\r\n  }\r\n  onChange(e) {\r\n    this.setState({ [e.target.name]: e.target.value });\r\n  }\r\n  onSubmit(e) {\r\n    e.preventDefault();\r\n    const newMedicine = {\r\n      name: this.state.name,\r\n      expirationDate: this.state.expirationDate,\r\n      place: this.state.place\r\n    };\r\n    this.props.createMedicine(newMedicine, this.props.history);\r\n  }\r\n  render() {\r\n    const { errors } = this.state;\r\n    return (\r\n      <div className=\"register\">\r\n        <div className=\"container\">\r\n          <div className=\"row\">\r\n            <div className=\"col-md-8 m-auto\">\r\n              <h5 className=\"display-4 text-center\">Add medicine</h5>\r\n              <hr />\r\n              <form onSubmit={this.onSubmit}>\r\n                <div className=\"form-group\">\r\n                  <input\r\n                    type=\"text\"\r\n                    className={classnames(\"form-control form-control-lg \", {\r\n                      \"is-invalid\": errors.name\r\n                    })}\r\n                    placeholder=\"Medicine Name\"\r\n                    name=\"name\"\r\n                    value={this.state.name}\r\n                    onChange={this.onChange}\r\n                  />\r\n                  {errors.name && (\r\n                    <div className=\"invalid-feedback\">{errors.name}</div>\r\n                  )}\r\n                </div>\r\n                <div className=\"form-group\">\r\n                  <input\r\n                    type=\"date\"\r\n                    className=\"form-control form-control-lg \"\r\n                    placeholder=\"Expiration date\"\r\n                    name=\"expirationDate\"\r\n                    value={this.state.expirationDate}\r\n                    onChange={this.onChange}\r\n                  />\r\n                </div>\r\n\r\n                <div className=\"form-group\">\r\n                  <textarea\r\n                    className={classnames(\"form-control form-control-lg \", {\r\n                      \"is-invalid\": errors.place\r\n                    })}\r\n                    placeholder=\"Medicine Place\"\r\n                    name=\"place\"\r\n                    value={this.state.place}\r\n                    onChange={this.onChange}\r\n                  />\r\n                  {errors.place && (\r\n                    <div className=\"invalid-feedback\">{errors.place}</div>\r\n                  )}\r\n                </div>\r\n\r\n                <input\r\n                  type=\"submit\"\r\n                  className=\"btn btn-primary btn-block mt-4\"\r\n                />\r\n              </form>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\nAddMedicine.propTypes = {\r\n  createMedicine: PropTypes.func.isRequired,\r\n  errors: PropTypes.object.isRequired\r\n};\r\n\r\nconst mapStateToProps = state => ({\r\n  errors: state.errors\r\n});\r\nexport default connect(\r\n  mapStateToProps,\r\n  { createMedicine }\r\n)(AddMedicine);\r\n","import React, { Component } from \"react\";\r\nimport { getMedicine, createMedicine } from \"../../actions/medicineActions\";\r\nimport PropTypes from \"prop-types\";\r\nimport { connect } from \"react-redux\";\r\nimport classnames from \"classnames\";\r\nclass UpdateMedicine extends Component {\r\n  constructor() {\r\n    super();\r\n\r\n    this.state = {\r\n      id: \"\",\r\n      name: \"\",\r\n      expirationDate: \"\",\r\n      place: \"\",\r\n      errors: {}\r\n    };\r\n    this.onChange = this.onChange.bind(this);\r\n    this.onSubmit = this.onSubmit.bind(this);\r\n  }\r\n  componentWillReceiveProps(nextProps) {\r\n    const { id, name, expirationDate, place } = nextProps.medicine;\r\n\r\n    this.setState({ id, name, expirationDate, place });\r\n    if (nextProps.errors) {\r\n      this.setState({ errors: nextProps.errors });\r\n    }\r\n  }\r\n  componentDidMount() {\r\n    const { id } = this.props.match.params;\r\n    this.props.getMedicine(id, this.props.history);\r\n  }\r\n\r\n  onChange(e) {\r\n    this.setState({ [e.target.name]: e.target.value });\r\n  }\r\n  onSubmit(e) {\r\n    e.preventDefault();\r\n    const updateMedicine = {\r\n      id: this.state.id,\r\n      name: this.state.name,\r\n      expirationDate: this.state.expirationDate,\r\n      place: this.state.place\r\n    };\r\n\r\n    this.props.createMedicine(updateMedicine, this.props.history);\r\n  }\r\n  render() {\r\n    const { errors } = this.state;\r\n    return (\r\n      <div className=\"register\">\r\n        <div className=\"container\">\r\n          <div className=\"row\">\r\n            <div className=\"col-md-8 m-auto\">\r\n              <h5 className=\"display-4 text-center\">Update Medicine</h5>\r\n              <hr />\r\n              <form onSubmit={this.onSubmit}>\r\n                <div className=\"form-group\">\r\n                  <input\r\n                    type=\"text\"\r\n                    className={classnames(\"form-control form-control-lg \", {\r\n                      \"is-invalid\": errors.name\r\n                    })}\r\n                    placeholder=\"Medicine Name\"\r\n                    name=\"name\"\r\n                    value={this.state.name}\r\n                    onChange={this.onChange}\r\n                  />\r\n                  {errors.name && (\r\n                    <div className=\"invalid-feedback\">{errors.name}</div>\r\n                  )}\r\n                </div>\r\n                <div className=\"form-group\">\r\n                  <input\r\n                    type=\"date\"\r\n                    className=\"form-control form-control-lg\"\r\n                    placeholder=\"Expiration Date\"\r\n                    name=\"expirationDate\"\r\n                    value={this.state.expirationDate}\r\n                    onChange={this.onChange}\r\n                  />\r\n                </div>\r\n                <div className=\"form-group\">\r\n                  <textarea\r\n                    className={classnames(\"form-control form-control-lg \", {\r\n                      \"is-invalid\": errors.place\r\n                    })}\r\n                    placeholder=\"Place\"\r\n                    name=\"place\"\r\n                    value={this.state.place}\r\n                    onChange={this.onChange}\r\n                  />\r\n                  {errors.description && (\r\n                    <div className=\"invalid-feedback\">{errors.place}</div>\r\n                  )}\r\n                </div>\r\n\r\n                <input\r\n                  type=\"submit\"\r\n                  className=\"btn btn-primary btn-block mt-4\"\r\n                />\r\n              </form>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\nUpdateMedicine.propTypes = {\r\n  getMedicine: PropTypes.func.isRequired,\r\n  createMedicine: PropTypes.func.isRequired,\r\n  medicine: PropTypes.object.isRequired,\r\n  errors: PropTypes.object.isRequired\r\n};\r\nconst mapStateToProps = state => ({\r\n  medicine: state.medicine.medicine,\r\n  errors: state.errors\r\n});\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  { getMedicine, createMedicine }\r\n)(UpdateMedicine);\r\n","import React, { Component } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { connect } from \"react-redux\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nclass Landing extends Component {\r\n  componentDidMount() {\r\n    if (this.props.security.validToken) {\r\n      this.props.history.push(\"/pharmacy\");\r\n    }\r\n  }\r\n  render() {\r\n    return (\r\n      <div className=\"landing\">\r\n        <div className=\"light-overlay landing-inner text-dark\">\r\n          <div className=\"container\">\r\n            <div className=\"row\">\r\n              <div className=\"col-md-12 text-center\">\r\n                <h1 className=\"display-3 mb-4\">Your home pharmacy</h1>\r\n                <p className=\"lead\">Create your acount</p>\r\n                <hr />\r\n                <Link className=\"btn btn-lg btn-primary mr-2\" to=\"/register\">\r\n                  Sign up\r\n                </Link>\r\n                <Link to=\"/login\" className=\"btn btn-lg btn-secondary mr-2\">\r\n                  Login\r\n                </Link>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nLanding.propTypes = {\r\n  security: PropTypes.object.isRequired\r\n};\r\nconst mapStateToProps = state => ({\r\n  security: state.security\r\n});\r\nexport default connect(mapStateToProps)(Landing);\r\n","import React, { Component } from \"react\";\r\nimport { createNewUser } from \"../../actions/securityActions\";\r\nimport PropTypes from \"prop-types\";\r\nimport { connect } from \"react-redux\";\r\nimport classnames from \"classnames\";\r\n\r\nclass Register extends Component {\r\n  constructor() {\r\n    super();\r\n\r\n    this.state = {\r\n      username: \"\",\r\n      password: \"\",\r\n      confirmPassword: \"\",\r\n      errors: {}\r\n    };\r\n\r\n    this.onChange = this.onChange.bind(this);\r\n    this.onSubmit = this.onSubmit.bind(this);\r\n  }\r\n  componentDidMount() {\r\n    if (this.props.security.validToken) {\r\n      this.props.history.push(\"/pharmacy\");\r\n    }\r\n  }\r\n  onChange(e) {\r\n    this.setState({ [e.target.name]: e.target.value });\r\n  }\r\n\r\n  componentWillReceiveProps(nextProps) {\r\n    if (nextProps.errors) {\r\n      this.setState({\r\n        errors: nextProps.errors\r\n      });\r\n    }\r\n  }\r\n  onSubmit(e) {\r\n    e.preventDefault();\r\n    const newUser = {\r\n      username: this.state.username,\r\n      password: this.state.password,\r\n      confirmPassword: this.state.confirmPassword\r\n    };\r\n\r\n    this.props.createNewUser(newUser, this.props.history);\r\n  }\r\n  render() {\r\n    const { errors } = this.state;\r\n    return (\r\n      <div className=\"register\">\r\n        <div className=\"container\">\r\n          <div className=\"row\">\r\n            <div className=\"col-md-8 m-auto\">\r\n              <h1 className=\"display-4 text-center\">Sign Up</h1>\r\n              <p className=\"lead text-center\">Create your Account</p>\r\n              <form onSubmit={this.onSubmit}>\r\n                <div className=\"form-group\">\r\n                  <input\r\n                    type=\"text\"\r\n                    className={classnames(\"form-control form-control-lg\", {\r\n                      \"is-invalid\": errors.username\r\n                    })}\r\n                    placeholder=\"Email (Username)\"\r\n                    name=\"username\"\r\n                    value={this.state.username}\r\n                    onChange={this.onChange}\r\n                  />\r\n                  {errors.username && (\r\n                    <div className=\"invalid-feedback\">{errors.username}</div>\r\n                  )}\r\n                </div>\r\n                <div className=\"form-group\">\r\n                  <input\r\n                    type=\"password\"\r\n                    className={classnames(\"form-control form-control-lg\", {\r\n                      \"is-invalid\": errors.password\r\n                    })}\r\n                    placeholder=\"Password\"\r\n                    name=\"password\"\r\n                    value={this.state.password}\r\n                    onChange={this.onChange}\r\n                  />\r\n                  {errors.password && (\r\n                    <div className=\"invalid-feedback\">{errors.password}</div>\r\n                  )}\r\n                </div>\r\n                <div className=\"form-group\">\r\n                  <input\r\n                    type=\"password\"\r\n                    className={classnames(\"form-control form-control-lg\", {\r\n                      \"is-invalid\": errors.confirmPassword\r\n                    })}\r\n                    placeholder=\"Confirm Password\"\r\n                    name=\"confirmPassword\"\r\n                    value={this.state.confirmPassword}\r\n                    onChange={this.onChange}\r\n                  />\r\n                  {errors.confirmPassword && (\r\n                    <div className=\"invalid-feedback\">\r\n                      {errors.confirmPassword}\r\n                    </div>\r\n                  )}\r\n                </div>\r\n                <input type=\"submit\" className=\"btn btn-info btn-block mt-4\" />\r\n              </form>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\nRegister.propTypes = {\r\n  createNewUser: PropTypes.func.isRequired,\r\n  errors: PropTypes.object.isRequired,\r\n  security: PropTypes.object.isRequired\r\n};\r\nconst mapStateToProps = state => ({\r\n  errors: state.errors,\r\n  security: state.security\r\n});\r\nexport default connect(\r\n  mapStateToProps,\r\n  { createNewUser }\r\n)(Register);\r\n","import React, { Component } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { connect } from \"react-redux\";\r\nimport classnames from \"classnames\";\r\nimport { login } from \"../../actions/securityActions\";\r\n\r\nclass Login extends Component {\r\n  constructor() {\r\n    super();\r\n\r\n    this.state = {\r\n      username: \"\",\r\n      password: \"\",\r\n      errors: {}\r\n    };\r\n\r\n    this.onChange = this.onChange.bind(this);\r\n    this.onSubmit = this.onSubmit.bind(this);\r\n  }\r\n\r\n  componentDidMount() {\r\n    if (this.props.security.validToken) {\r\n      this.props.history.push(\"/pharmacy\");\r\n    }\r\n  }\r\n  componentWillReceiveProps(nextProps) {\r\n    if (nextProps.security.validToken) {\r\n      this.props.history.push(\"/pharmacy\");\r\n    }\r\n\r\n    if (nextProps.errors) {\r\n      this.setState({ errors: nextProps.errors });\r\n    }\r\n  }\r\n\r\n  onSubmit(e) {\r\n    e.preventDefault();\r\n    const LoginRequest = {\r\n      username: this.state.username,\r\n      password: this.state.password\r\n    };\r\n    this.props.login(LoginRequest);\r\n  }\r\n  onChange(e) {\r\n    this.setState({ [e.target.name]: e.target.value });\r\n  }\r\n  render() {\r\n    const { errors } = this.state;\r\n    return (\r\n      <div className=\"login\">\r\n        <div className=\"container\">\r\n          <div className=\"row\">\r\n            <div className=\"col-md-8 m-auto\">\r\n              <h1 className=\"display-4 text-center\">Log In</h1>\r\n              <form onSubmit={this.onSubmit}>\r\n                <div className=\"form-group\">\r\n                  <input\r\n                    type=\"text\"\r\n                    className={classnames(\"form-control form-control-lg\", {\r\n                      \"is-invalid\": errors.username\r\n                    })}\r\n                    placeholder=\"Email Address\"\r\n                    name=\"username\"\r\n                    value={this.state.username}\r\n                    onChange={this.onChange}\r\n                  />\r\n                  {errors.username && (\r\n                    <div className=\"invalid-feedback\">{errors.username}</div>\r\n                  )}\r\n                </div>\r\n                <div className=\"form-group\">\r\n                  <input\r\n                    type=\"password\"\r\n                    className={classnames(\"form-control form-control-lg\", {\r\n                      \"is-invalid\": errors.password\r\n                    })}\r\n                    placeholder=\"Password\"\r\n                    name=\"password\"\r\n                    value={this.state.password}\r\n                    onChange={this.onChange}\r\n                  />\r\n                  {errors.password && (\r\n                    <div className=\"invalid-feedback\">{errors.password}</div>\r\n                  )}\r\n                </div>\r\n                <input type=\"submit\" className=\"btn btn-info btn-block mt-4\" />\r\n              </form>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\nLogin.propTypes = {\r\n  login: PropTypes.func.isRequired,\r\n  errors: PropTypes.object.isRequired,\r\n  security: PropTypes.object.isRequired\r\n};\r\n\r\nconst mapStateToProps = state => ({\r\n  security: state.security,\r\n  errors: state.errors\r\n});\r\nexport default connect(\r\n  mapStateToProps,\r\n  { login }\r\n)(Login);\r\n","import React from \"react\";\r\nimport { Route, Redirect } from \"react-router-dom\";\r\nimport { connect } from \"react-redux\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nconst SecuredRoute = ({ component: Component, security, ...otherProps }) => (\r\n  <Route\r\n    {...otherProps}\r\n    render={props =>\r\n      security.validToken === true ? (\r\n        <Component {...props} />\r\n      ) : (\r\n        <Redirect to=\"/login\" />\r\n      )\r\n    }\r\n  />\r\n);\r\n\r\nSecuredRoute.propTypes = {\r\n  security: PropTypes.object.isRequired\r\n};\r\nconst stateMapsToProps = state => ({\r\n  security: state.security\r\n});\r\nexport default connect(stateMapsToProps)(SecuredRoute);\r\n","import React, { Component } from \"react\";\nimport \"./App.css\";\nimport Pharmacy from \"./components/Pharmacy\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport Header from \"./components/Layout/Header\";\nimport { BrowserRouter as Router, Route, Switch } from \"react-router-dom\";\nimport { Provider } from \"react-redux\";\nimport store from \"./store\";\nimport AddMedicine from \"./components/Medicine/AddMedicine\";\nimport UpdateMedicine from \"./components/Medicine/UpdateMedicine\";\nimport Landing from \"./components/Layout/Landing\";\nimport Register from \"./components/UserManagement/Register\";\nimport Login from \"./components/UserManagement/Login\";\nimport jwt_decode from \"jwt-decode\";\nimport setJWTToken from \"./securityUtils/setJWTToken\";\nimport { SET_CURRENT_USER } from \"./actions/types\";\nimport { logout } from \"./actions/securityActions\";\nimport SecuredRoute from \"./securityUtils/SecureRoute\";\n\nconst jwtToken = localStorage.jwtToken;\n\nif (jwtToken) {\n  setJWTToken(jwtToken);\n  const decoded_jwtToken = jwt_decode(jwtToken);\n  store.dispatch({\n    type: SET_CURRENT_USER,\n    payload: decoded_jwtToken\n  });\n\n  const currentTime = Date.now() / 1000;\n  if (decoded_jwtToken.exp < currentTime) {\n    store.dispatch(logout());\n    window.location.href = \"/\";\n  }\n}\nclass App extends Component {\n  render() {\n    return (\n      <Provider store={store}>\n        <Router>\n          <div className=\"App\">\n            <Header />\n\n            {\n              //public routes\n            }\n\n            <Route exact path=\"/\" component={Landing} />\n            <Route exact path=\"/register\" component={Register} />\n            <Route exact path=\"/login\" component={Login} />\n            {\n              //private routes\n            }\n            <Switch>\n              <SecuredRoute exact path=\"/pharmacy\" component={Pharmacy} />\n              <SecuredRoute exact path=\"/addMedicine\" component={AddMedicine} />\n              <SecuredRoute\n                exact\n                path=\"/updateMedicine/:id\"\n                component={UpdateMedicine}\n              />\n            </Switch>\n          </div>\n        </Router>\n      </Provider>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}